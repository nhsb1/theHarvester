***************************************************************************
*                                                                         *
*  ___ _ __ ___   __ _(_) | /\  /\__ _ _ ____   _____  ___| |_ ___ _ __   * 
* / _ \ '_ ` _ \ / _` | | |/ /_/ / _` | '__\ \ / / _ \/ __| __/ _ \ '__|  *
*|  __/ | | | | | (_| | | / __  / (_| | |   \ V /  __/\__ \ ||  __/ |     *
*\___|_| |_| |_|\__,_|_|_\/ /_/ \__,_|_|    \_/ \___||___/\__\___|_|      *
*                                                                         *
emailHarvester Ver. 0.7 (forked from theHarvester ver. 2.6)               *
Only designed to work with '-b all' option                                *
Example usage: emailHarvester.py -d domains.txt -b all                    *
Changes:                                                                  *
Takes a list of domains (-d domains.txt) as input                         *
Produces a list of email address (only) as output                         *
Other functionality from source project might not function anymore        *
***************************************************************************

What is this?
-------------

emailHarvester is a tool for gathering e-mail address from different public sources (Google, Bing, pgp key servers, exaleadsearch).
I modified theHarvester 2.6 so that it would take a text file as input, and loop through the "-b all" functionality, and produce
only a list of email addresses, suitable for export to a spreadsheet or other source.  

Basically, unless you're using it like so: "emailHarvester.py -d domains.txt -b all" where you're specifying a list of domains in 
file, existing functionality from theHarvester might be (is) broken.    

Passive:
--------
-google: google search engine  - www.google.com

-googleCSE: google custom search engine

-google-profiles: google search engine, specific search for Google profiles

-bing: microsoft search engine  - www.bing.com

-bingapi: microsoft search engine, through the API (you need to add your Key in
          the discovery/bingsearch.py file)

-pgp: pgp key server - pgp.rediris.es

-linkedin: google search engine, specific search for Linkedin users


-vhost: Bing virtual hosts search

-twitter: twitter accounts related to an specific domain (uses google search)

-googleplus: users that works in target company (uses google search)

-yahoo: Yahoo search engine

-baidu: Baidu search engine

-shodan: Shodan Computer search engine, will search for ports and banner of the
         discovered hosts  (http://www.shodanhq.com/)


Active:
-------
-DNS brute force: this plugin will run a dictionary brute force enumeration
-DNS reverse lookup: reverse lookup of ipÂ´s discovered in order to find hostnames
-DNS TDL expansion: TLD dictionary brute force enumeration


Modules that need API keys to work:
----------------------------------
-googleCSE: You need to create a Google Custom Search engine(CSE), and add your
 Google API key and CSE ID in the plugin (discovery/googleCSE.py)
-shodan: You need to provide your API key in discovery/shodansearch.py


Dependencies:
------------
-Requests library (http://docs.python-requests.org/en/latest/)
`pip install requests`


Changelog in 0.7
-Take an input file
